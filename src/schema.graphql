type Query {
    chambers: [Chamber!]!
    users: [User!]!
    chamber(id:String): Chamber
}
type Mutation {
    signup(name:String!,email:String!,phone:String!,matricule:String!,filiere:String!,option:String!,password:String!):AuthPayload!
    login(phone:String!,password:String!): AuthPayload!
    createChamber(localisation: String!,dimension: String!,quartier: String!, description: String!,prix: Int!,nombreMois: Int,aDoucheInterne: Boolean,aCaution: Boolean,aPlafond: Boolean,estCarreler: Boolean): Chamber!
}
   
    
type AuthPayload {
    token: String!
    user: User!
}
type User {
    id: ID!
    name: String!
    email: String! 
    phone: String!
    matricule: String! 
    filiere: String! 
    option:String!
    password: String!
    chambers: [Chamber]
}
type Chamber {
    id: ID!
    localisation: String!
    dimension: String!
    quartier: String!
    description: String!
    prix: Int!
    nombreMois: Int
    aDoucheInterne: Boolean
    aCaution: Boolean
    aPlafond: Boolean
    estCarreler: Boolean
    estLibre:Boolean 
    users: [User!]!

}
